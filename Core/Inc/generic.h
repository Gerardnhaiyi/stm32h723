/***********************************************************************************************************************************
 *  File name          : generic.h
 *  Author             : Gerard
 *
 *  Compiler           : STM32CubeIDE
 *  Manufacturer       : STMicroelectronics
 *  CreationDate       : Jul 24, 2024
 *
 **********************************************************************************************************************************/
#ifndef INC_GENERIC_H_
	#define INC_GENERIC_H_

/***********************************************************************************************************************************
 *  Used defines       : 
 **********************************************************************************************************************************/
//	#define VERSION2
	#define SoftwareVersion		0x00010400
	#define HardwareVersion		0x00010400
	#define ParameterVersion	0x00010400
	#define msgLngthMax 256

/***********************************************************************************************************************************
 *  Used includes      :
 **********************************************************************************************************************************/

/***********************************************************************************************************************************
 *  Used constantes    :
 **********************************************************************************************************************************/

/***********************************************************************************************************************************
 *	enum name          : valveModes
 *
 *  enum Description   : the possible modes to use
 *
 **********************************************************************************************************************************/
    enum valveModes
    {
        SINGLE_VALVE = 0,
        INVERTED_SINGLE_VALVE,
        DUAL_VALVE,
        DOUBLE_SINGLE_VALVE
    };

/***********************************************************************************************************************************
 *	 enum name         : communicationInterface
 *
 *   enum Description  : Enum used to indicate on which interface the message is received
 *
 **********************************************************************************************************************************/
	enum communicationInterface
	{
		NONE = 0,
		USB,
		RS485,
		MAX_PORTS
	};

/***********************************************************************************************************************************
 *	enum name          : communicationProtocol
 *
 *  enum Description   : Enum used to indicate on which protocol is used
 **********************************************************************************************************************************/
	enum communicationProtocol
	{
		MODBUS = 0,
		ANYBUS,
		MAX_PROTOCOLS
	};

/***********************************************************************************************************************************
 *	 enum name         : modbusState
 *
 *   enum Description  : enumeration of the serial state
 *
 **********************************************************************************************************************************/
	enum  serialState
	{
		IDLE = 0, //Idle state
		RX_ARMED, //set ready to receive data
		RX_COMPLETE, //indicate all data is received
		TRANSMITTING, //indicate if the peripheral is transmitting
		TX_DONE //indicate all data is transmitted
	};

/***********************************************************************************************************************************
 *	 enum name         :
 *
 *   enum Description  :
 *
 **********************************************************************************************************************************/
	enum RsParity
	{
		None = 0,
		Odd,
		Even
	};

/***********************************************************************************************************************************
 *	array name         :
 *
 *  array Description  :
 *
 **********************************************************************************************************************************/

/***********************************************************************************************************************************
 *	struct name        :
 *
 *	struct Description :
 *
 **********************************************************************************************************************************/

/***********************************************************************************************************************************
 *	Class name         : 
 *
 *  Class Description  : 
 *
 *	Inheritance        : None
 *
 **********************************************************************************************************************************/

/***********************************************************************************************************************************
 *  Prototypes         :
 **********************************************************************************************************************************/
    

#endif /* INC_GENERIC_H_ */
